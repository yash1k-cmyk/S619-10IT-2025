class Human:
    def __init__(self, zp, name, rent, exp, rentproc, renttime, cat):
        self.zp=zp
        self.name=name
        self.rent=rent
        self.rentproc=rentproc
        self.renttime=renttime
        self.exp=exp
        self.cat=cat

Bob=Human(name='Bob', zp=80000, rent=30000, exp=7500, cat=1500, rentproc=0, renttime=0) #кот и расходы указаныф за месяц
Alice=Human(name='Alice', zp=200000, rent=100000, renttime=30, exp=5500, rentproc=0.12, cat=0)

def Payrent(rentproc, rent, renttime):
    if rentproc == 0:
        return 0
    months = renttime * 12
    Month_rentproc= rentproc / 12
    return rent * (Month_rentproc * (1 + Month_rentproc)**months) / ((1 + Month_rentproc)**months - 1)

Yearssim= int(input('Сколько прошло лет: '))
months = Yearssim * 12

monthpay= Payrent(Alice.rentproc, Alice.rent, Alice.renttime)
yearpay= monthpay * 12
yearcat= Bob.cat * 12
yearexpb= Bob.exp * 12
yearexpa= Alice.exp * 12
yearrentb= Bob.rent * 12
yearzpb= Bob.zp * 12
yearzpa= Alice.zp * 12

Bbalance = 0
Abalance = 0

for i in range(Yearssim):
    Bbalance+= (yearzpb - yearrentb - yearexpb - yearcat)
    Abalance+= (yearzpa - yearpay - yearexpa)
print(f'Через {Yearssim} лет:')
    
if Abalance > 0:
    print(f'Алиса накопит: {Abalance:.1f}')
else:
   print(f'Алиса потратит: {Abalance*-1:.1f}')
if Bbalance > 0:
    print(f'Боб накопит: {Bbalance:.1f}')
else:
    print(f'Боб потратит: {Bbalance*-1:.1f}')